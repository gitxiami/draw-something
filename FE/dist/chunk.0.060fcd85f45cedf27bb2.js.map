{"version":3,"sources":["webpack:///chunk.0.060fcd85f45cedf27bb2.js","webpack:///./src/containers/Room.js","webpack:///./src/utils/wsAction.js","webpack:///./src/containers/Header.js","webpack:///./src/containers/Game.js","webpack:///./src/utils/brush.js","webpack:///./src/utils/formatter.js"],"names":["webpackJsonp","767","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","undefined","_dec","_class","_class2","_temp2","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_extends2","_extends3","_react","_react2","_propTypes","_propTypes2","_redux","_reactRedux","_room","roomActions","newObj","key","prototype","hasOwnProperty","call","_Game","_Game2","_Header","_Header2","_wsAction","_wsAction2","_formatter","_main","_message","renderMessageList","messageList","createElement","map","message","type","className","timestamp","getPersonName","by","enter","leave","content","old","name","info","getFormatTime","Room","connect","state","currentRoom","room","user","dispatch","bindActionCreators","_Component","_ref","_temp","_this","_ret","this","_len","arguments","length","args","Array","_key","__proto__","apply","concat","messageInputValue","_this2","props","owner","people","title","filter","person","id","index","personName","ref","placeholder","onChange","e","target","setState","onKeyDown","keyCode","sendMessage","onClick","bind","sendRoomMessage","_this3","_props","roomName","message$$","message$","subscribe","refs","scrollTop","scrollHeight","document","enterRoom","unsubscribe","Component","propTypes","string","isRequired","769","_interopRequireWildcard","_socketIo","_socketIo2","_localStorage","_localStorage2","_reducers","_reducers2","_network","_user","userActions","_game","emit","setRoomInfo","leaveRoom","userInfo","getState","res","ok","next","startGame","emitCanvasStroke","stroke","setUserInfo","set","setUserData","770","_reactRouterDom","networkActions","Header","loadingStatus","network","webSocketStatus","nameEditable","nameValue","loading","loaded","wsConnect","wsDisconnect","aria-hidden","xlinkHref","Link","to","switchInfoEditable","setName","style","fill","defaultProps","771","_brush","_brush2","_Rx","_Rx2","_canvas","gameActions","_config","renderRankings","players","list","playerId","player","push","sort","a","b","score","online","Game","game","color","redrawCanvas","canvas","width","offsetWidth","height","offsetHeight","brush","redraw","canvasData","strokes","word","countDown","banker","status","isRoomOwner","pending","going","await","cursor","strokeColors","background","syncStroke","mode","_props2","setGameStatus","setGameCountDown","setGameBanker","setGamePlayers","setGameWord","setCanvasData","window","addEventListener","canvasStroke$$","canvasStroke$","canvasReset$$","canvasReset$","resetCanvas","mouseEvent$$","Observable","fromEvent","do","x","offsetX","y","offsetY","switchMap","firstE","takeUntil","body","setTimeout","removeEventListener","fromServer","_props3","pushCanvasStroke","exec","size","772","_getIterator2","_getIterator3","Brush","_ref$lineWidth","lineWidth","_ref$color","ctx","getContext","strokeStyle","slice","revokeIndex","revokeLoop","findIndex","beginIndex","closeIndex","splice","i","console","log","_ctx$canvas","clearRect","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","done","draw","err","return","_ctx$canvas2","beginPath","moveTo","lineTo","closePath","773","fillZero","num","date","Date","getFullYear","getMonth","getDate","Y","M","D","_ref2","getHours","getMinutes","getSeconds","h","m","s"],"mappings":"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","file":"chunk.0.060fcd85f45cedf27bb2.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 767:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = undefined;\n\nvar _getPrototypeOf = __webpack_require__(94);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(91);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(92);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(95);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(96);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _extends2 = __webpack_require__(249);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _dec, _class, _class2, _temp2;\n\nvar _react = __webpack_require__(9);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(16);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _redux = __webpack_require__(23);\n\nvar _reactRedux = __webpack_require__(93);\n\nvar _room = __webpack_require__(250);\n\nvar roomActions = _interopRequireWildcard(_room);\n\nvar _Game = __webpack_require__(771);\n\nvar _Game2 = _interopRequireDefault(_Game);\n\nvar _Header = __webpack_require__(770);\n\nvar _Header2 = _interopRequireDefault(_Header);\n\nvar _wsAction = __webpack_require__(769);\n\nvar _wsAction2 = _interopRequireDefault(_wsAction);\n\nvar _formatter = __webpack_require__(773);\n\nvar _main = __webpack_require__(253);\n\nvar _message = __webpack_require__(252);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar renderMessageList = function renderMessageList(messageList) {\n    return _react2.default.createElement(\n        'div',\n        null,\n        messageList.map(function (message) {\n            switch (message.type) {\n                case 'enter':\n                case 'leave':\n                    return _react2.default.createElement(\n                        'div',\n                        { className: 'message', key: message.timestamp + message.type },\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'info system' },\n                            _react2.default.createElement(\n                                'span',\n                                { className: 'by' },\n                                (0, _main.getPersonName)(message.by),\n                                ' ',\n                                { 'enter': '进入房间', 'leave': '离开房间' }[message.type]\n                            )\n                        )\n                    );\n                case 'info-change':\n                    return _react2.default.createElement(\n                        'div',\n                        { className: 'message', key: message.timestamp },\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'info system' },\n                            _react2.default.createElement(\n                                'span',\n                                { className: 'by' },\n                                message.content.old.name,\n                                ' \\u6539\\u540D\\u4E3A ',\n                                message.content.info.name\n                            )\n                        )\n                    );\n                case 'message':\n                    return _react2.default.createElement(\n                        'div',\n                        { className: 'message', key: message.timestamp },\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'info' },\n                            _react2.default.createElement(\n                                'span',\n                                { className: 'by' },\n                                (0, _main.getPersonName)(message.by)\n                            ),\n                            _react2.default.createElement(\n                                'span',\n                                { className: 'time' },\n                                (0, _formatter.getFormatTime)(message.timestamp, 'HMS')\n                            )\n                        ),\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'content' },\n                            message.content\n                        )\n                    );\n                default:\n                    return null;\n            }\n        })\n    );\n};\n\nvar Room = (_dec = (0, _reactRedux.connect)(function (state) {\n    return {\n        currentRoom: state.room.currentRoom,\n        user: state.user\n    };\n}, function (dispatch) {\n    return (0, _redux.bindActionCreators)((0, _extends3.default)({}, roomActions), dispatch);\n}), _dec(_class = (_temp2 = _class2 = function (_Component) {\n    (0, _inherits3.default)(Room, _Component);\n\n    function Room() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        (0, _classCallCheck3.default)(this, Room);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Room.__proto__ || (0, _getPrototypeOf2.default)(Room)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n            messageInputValue: ''\n        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n    }\n\n    (0, _createClass3.default)(Room, [{\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var currentRoom = this.props.currentRoom;\n            var owner = currentRoom.owner,\n                people = currentRoom.people,\n                name = currentRoom.name;\n\n            return _react2.default.createElement(\n                'section',\n                null,\n                _react2.default.createElement(_Header2.default, { key: 'header', title: name, type: 'room' }),\n                _react2.default.createElement(\n                    'section',\n                    { className: 'room-container' },\n                    _react2.default.createElement(\n                        'section',\n                        { className: 'game-block' },\n                        _react2.default.createElement(_Game2.default, { key: 'game' })\n                    ),\n                    _react2.default.createElement(\n                        'section',\n                        { className: 'people-block' },\n                        _react2.default.createElement(\n                            'div',\n                            { title: '\\u623F\\u4E3B' },\n                            _react2.default.createElement(\n                                'span',\n                                null,\n                                (0, _main.getPersonName)(owner),\n                                _react2.default.createElement(\n                                    'span',\n                                    { className: 'host-marker' },\n                                    '(\\u623F\\u4E3B)'\n                                )\n                            )\n                        ),\n                        _react2.default.createElement(\n                            'div',\n                            null,\n                            people.filter(function (person) {\n                                return owner && person.id !== owner.id;\n                            }).map(function (person, index) {\n                                var personName = (0, _main.getPersonName)(person);\n                                return _react2.default.createElement(\n                                    'div',\n                                    { key: person.id },\n                                    _react2.default.createElement(\n                                        'span',\n                                        { title: personName },\n                                        personName\n                                    )\n                                );\n                            })\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'section',\n                        { className: 'chat-block' },\n                        _react2.default.createElement(\n                            'section',\n                            { className: 'message-wrapper', ref: 'message-wrapper' },\n                            renderMessageList(currentRoom.messageList)\n                        ),\n                        _react2.default.createElement(\n                            'section',\n                            { className: 'input-wrapper input-group input-btn' },\n                            _react2.default.createElement('input', {\n                                className: 'input input-default input-md',\n                                placeholder: '\\u8BF7\\u8F93\\u5165\\u5185\\u5BB9',\n                                value: this.state.messageInputValue,\n                                onChange: function onChange(e) {\n                                    var messageInputValue = e.target.value;\n                                    _this2.setState({\n                                        messageInputValue: messageInputValue\n                                    });\n                                },\n                                onKeyDown: function onKeyDown(e) {\n                                    return e.keyCode === 13 && _this2.sendMessage();\n                                }\n                            }),\n                            _react2.default.createElement(\n                                'span',\n                                { className: \"btn btn-default btn-md\" + (this.state.messageInputValue ? '' : ' disabled'), onClick: this.sendMessage.bind(this) },\n                                '\\u53D1\\u9001'\n                            )\n                        )\n                    )\n                )\n            );\n        }\n    }, {\n        key: 'sendMessage',\n        value: function sendMessage() {\n            if (this.state.messageInputValue) {\n                _wsAction2.default.sendRoomMessage(this.state.messageInputValue);\n                this.setState({\n                    messageInputValue: ''\n                });\n            }\n        }\n    }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var _this3 = this;\n\n            var _props = this.props,\n                roomName = _props.roomName,\n                currentRoom = _props.currentRoom;\n\n            this.message$$ = _message.message$.subscribe(function (message) {\n                _this3.refs['message-wrapper'].scrollTop = _this3.refs['message-wrapper'].scrollHeight;\n            });\n            if (currentRoom && currentRoom.name === roomName) return;\n            // todo 处理此时socket还未连接上的情况\n            document.title = '\\u4F60\\u753B\\u6211\\u731Conline - ' + roomName;\n            _wsAction2.default.enterRoom(roomName);\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            this.message$$.unsubscribe();\n        }\n    }]);\n    return Room;\n}(_react.Component), _class2.propTypes = {\n    roomName: _propTypes2.default.string.isRequired\n}, _temp2)) || _class);\nexports.default = Room;\n\n/***/ }),\n\n/***/ 769:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _socketIo = __webpack_require__(254);\n\nvar _socketIo2 = _interopRequireDefault(_socketIo);\n\nvar _localStorage = __webpack_require__(147);\n\nvar _localStorage2 = _interopRequireDefault(_localStorage);\n\nvar _reducers = __webpack_require__(148);\n\nvar _reducers2 = _interopRequireDefault(_reducers);\n\nvar _room = __webpack_require__(250);\n\nvar roomActions = _interopRequireWildcard(_room);\n\nvar _network = __webpack_require__(144);\n\nvar networkActions = _interopRequireWildcard(_network);\n\nvar _user = __webpack_require__(146);\n\nvar userActions = _interopRequireWildcard(_user);\n\nvar _game = __webpack_require__(251);\n\nvar gameActions = _interopRequireWildcard(_game);\n\nvar _message = __webpack_require__(252);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n    enterRoom: function enterRoom(roomName) {\n        _socketIo2.default.emit('enterRoom', roomName, function () {\n            _reducers2.default.dispatch(roomActions.setRoomInfo({ roomName: roomName }));\n        });\n    },\n    leaveRoom: function leaveRoom() {\n        _socketIo2.default.emit('leaveRoom');\n        _reducers2.default.dispatch(roomActions.setRoomInfo({ roomName: '' }));\n    },\n    sendRoomMessage: function sendRoomMessage(content) {\n        var userInfo = _reducers2.default.getState().user;\n        _socketIo2.default.emit('sendRoomMessage', content, function (res) {\n            if (!res.ok) return;\n            _message.message$.next({\n                content: content,\n                by: userInfo,\n                timestamp: res.timestamp,\n                type: 'message'\n            });\n        });\n    },\n    startGame: function startGame() {\n        _socketIo2.default.emit('startGame');\n    },\n    emitCanvasStroke: function emitCanvasStroke(stroke) {\n        _socketIo2.default.emit('canvasStroke', stroke);\n    },\n    setUserInfo: function setUserInfo(info) {\n        _socketIo2.default.emit('setClientInfo', info, function (e) {\n            _localStorage2.default.set('clientInfo', info, 7 * 24 * 60 * 60 * 1000);\n            _reducers2.default.dispatch(userActions.setUserData({\n                info: info\n            }));\n        });\n    }\n};\n\n/***/ }),\n\n/***/ 770:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = undefined;\n\nvar _getPrototypeOf = __webpack_require__(94);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(91);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(92);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(95);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(96);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _extends2 = __webpack_require__(249);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _dec, _class, _class2, _temp2;\n\nvar _react = __webpack_require__(9);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _redux = __webpack_require__(23);\n\nvar _reactRedux = __webpack_require__(93);\n\nvar _reactRouterDom = __webpack_require__(145);\n\nvar _network = __webpack_require__(144);\n\nvar networkActions = _interopRequireWildcard(_network);\n\nvar _wsAction = __webpack_require__(769);\n\nvar _wsAction2 = _interopRequireDefault(_wsAction);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Header = (_dec = (0, _reactRedux.connect)(function (state) {\n    return {\n        loadingStatus: state.network.loadingStatus,\n        webSocketStatus: state.network.webSocketStatus,\n        user: state.user\n    };\n}, function (dispatch) {\n    return (0, _redux.bindActionCreators)((0, _extends3.default)({}, networkActions), dispatch);\n}), _dec(_class = (_temp2 = _class2 = function (_Component) {\n    (0, _inherits3.default)(Header, _Component);\n\n    function Header() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        (0, _classCallCheck3.default)(this, Header);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Header.__proto__ || (0, _getPrototypeOf2.default)(Header)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n            nameEditable: false,\n            nameValue: ''\n        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n    }\n\n    (0, _createClass3.default)(Header, [{\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var _props = this.props,\n                loadingStatus = _props.loadingStatus,\n                webSocketStatus = _props.webSocketStatus,\n                loading = _props.loading,\n                loaded = _props.loaded,\n                wsConnect = _props.wsConnect,\n                wsDisconnect = _props.wsDisconnect,\n                user = _props.user,\n                title = _props.title,\n                type = _props.type;\n\n\n            var typeNode = function typeNode(type) {\n                switch (type) {\n                    case 'home':\n                        return null;\n                    case 'room':\n                        return _react2.default.createElement(\n                            _reactRouterDom.Link,\n                            { to: '/' },\n                            _react2.default.createElement(\n                                'span',\n                                { className: 'icon-wrapper' },\n                                _react2.default.createElement(\n                                    'svg',\n                                    { className: 'icon clickable', 'aria-hidden': 'true' },\n                                    _react2.default.createElement('use', { xlinkHref: '#icon-back' })\n                                )\n                            )\n                        );\n                    default:\n                        return null;\n                }\n            };\n            return _react2.default.createElement(\n                'section',\n                { className: 'fixed-header' },\n                _react2.default.createElement(\n                    'div',\n                    { className: 'item left' },\n                    webSocketStatus ? null : _react2.default.createElement(\n                        'span',\n                        {\n                            className: 'item wifi ' + 'alert-color',\n                            title: '网络出错'\n                        },\n                        _react2.default.createElement(\n                            'svg',\n                            { className: 'icon', 'aria-hidden': 'true' },\n                            _react2.default.createElement('use', { xlinkHref: '#icon-wifi' })\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'span',\n                        null,\n                        typeNode(type)\n                    ),\n                    _react2.default.createElement(\n                        'span',\n                        null,\n                        type === 'room' ? _react2.default.createElement(\n                            'span',\n                            null,\n                            '\\u623F\\u95F4\\uFF1A',\n                            _react2.default.createElement(\n                                'span',\n                                { className: 'room-name' },\n                                title\n                            )\n                        ) : _react2.default.createElement(\n                            'span',\n                            null,\n                            title\n                        )\n                    )\n                ),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'item right', onClick: this.switchInfoEditable.bind(this) },\n                    this.state.nameEditable ? [_react2.default.createElement(\n                        'span',\n                        { key: 'icon', className: 'icon-wrapper' },\n                        _react2.default.createElement(\n                            'svg',\n                            { className: 'icon', 'aria-hidden': 'true' },\n                            _react2.default.createElement('use', { xlinkHref: '#icon-people' })\n                        )\n                    ), _react2.default.createElement('input', {\n                        key: 'input',\n                        className: 'input input-white input-md',\n                        value: this.state.nameValue,\n                        onChange: function onChange(e) {\n                            _this2.setState({\n                                nameValue: e.target.value\n                            });\n                        },\n                        onKeyDown: function onKeyDown(e) {\n                            if (e.keyCode === 13) {\n                                _this2.setName();\n                            }\n                        }\n                    }), _react2.default.createElement(\n                        'span',\n                        { key: 'confirm', className: 'icon-wrapper', onClick: this.setName.bind(this) },\n                        _react2.default.createElement(\n                            'svg',\n                            { className: 'icon clickable', 'aria-hidden': 'true' },\n                            _react2.default.createElement('use', { xlinkHref: '#icon-roundcheck' })\n                        )\n                    ), _react2.default.createElement(\n                        'span',\n                        { key: 'cancel', className: 'icon-wrapper', onClick: function onClick() {\n                                _this2.setState({\n                                    nameEditable: false\n                                });\n                            } },\n                        _react2.default.createElement(\n                            'svg',\n                            { className: 'icon clickable', 'aria-hidden': 'true' },\n                            _react2.default.createElement('use', { xlinkHref: '#icon-roundclose' })\n                        )\n                    )] : _react2.default.createElement(\n                        'div',\n                        { title: '\\u70B9\\u51FB\\u4FEE\\u6539\\u6635\\u79F0', className: 'clickable' },\n                        _react2.default.createElement(\n                            'span',\n                            { className: 'icon-wrapper' },\n                            _react2.default.createElement(\n                                'svg',\n                                { style: { stroke: \"#fff\", fill: \"#fff\" }, className: 'icon', 'aria-hidden': 'true' },\n                                _react2.default.createElement('use', { xlinkHref: '#icon-people' })\n                            )\n                        ),\n                        _react2.default.createElement(\n                            'span',\n                            null,\n                            user.info.name || user.id\n                        )\n                    )\n                )\n            );\n        }\n    }, {\n        key: 'componentWillMount',\n        value: function componentWillMount() {}\n    }, {\n        key: 'switchInfoEditable',\n        value: function switchInfoEditable() {\n            if (!this.state.nameEditable) {\n                this.setState({\n                    nameEditable: true,\n                    nameValue: this.props.user.info.name || this.props.user.id\n                });\n            }\n        }\n    }, {\n        key: 'setName',\n        value: function setName() {\n            if (this.props.user.info.name !== this.state.nameValue) {\n                _wsAction2.default.setUserInfo({\n                    name: this.state.nameValue\n                });\n            }\n            this.setState({\n                nameEditable: false\n            });\n        }\n    }]);\n    return Header;\n}(_react.Component), _class2.defaultProps = {\n    type: ''\n}, _temp2)) || _class);\nexports.default = Header;\n\n/***/ }),\n\n/***/ 771:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = undefined;\n\nvar _getPrototypeOf = __webpack_require__(94);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(91);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(92);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(95);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(96);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _extends2 = __webpack_require__(249);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _dec, _class;\n\nvar _react = __webpack_require__(9);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _redux = __webpack_require__(23);\n\nvar _reactRedux = __webpack_require__(93);\n\nvar _brush = __webpack_require__(772);\n\nvar _brush2 = _interopRequireDefault(_brush);\n\nvar _Rx = __webpack_require__(66);\n\nvar _Rx2 = _interopRequireDefault(_Rx);\n\nvar _wsAction = __webpack_require__(769);\n\nvar _wsAction2 = _interopRequireDefault(_wsAction);\n\nvar _canvas = __webpack_require__(257);\n\nvar _game = __webpack_require__(251);\n\nvar gameActions = _interopRequireWildcard(_game);\n\nvar _main = __webpack_require__(253);\n\nvar _config = __webpack_require__(149);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar renderRankings = function renderRankings(players) {\n    var list = [];\n    for (var playerId in players) {\n        var player = players[playerId];\n        list.push(player);\n    }\n    list.sort(function (a, b) {\n        return a.score > b.score ? -1 : 1;\n    });\n    list = list.map(function (player, index) {\n        return _react2.default.createElement(\n            'div',\n            { key: player.id, className: 'table-row' },\n            _react2.default.createElement(\n                'span',\n                { className: 'rank' },\n                index + 1\n            ),\n            _react2.default.createElement(\n                'span',\n                { title: (0, _main.getPersonName)(player), className: \"name\" + (player.online ? ' on' : ' off') },\n                (0, _main.getPersonName)(player)\n            ),\n            _react2.default.createElement(\n                'span',\n                { className: 'score' },\n                player.score\n            )\n        );\n    });\n    return list;\n};\n\nvar Game = (_dec = (0, _reactRedux.connect)(function (state) {\n    return {\n        game: state.game,\n        user: state.user,\n        currentRoom: state.room.currentRoom\n    };\n}, function (dispatch) {\n    return (0, _redux.bindActionCreators)((0, _extends3.default)({}, gameActions), dispatch);\n}), _dec(_class = function (_Component) {\n    (0, _inherits3.default)(Game, _Component);\n\n    function Game() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        (0, _classCallCheck3.default)(this, Game);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Game.__proto__ || (0, _getPrototypeOf2.default)(Game)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n            color: '#000'\n        }, _this.redrawCanvas = function () {\n            var canvas = this.refs.canvas;\n            canvas.width = canvas.offsetWidth;\n            canvas.height = canvas.offsetHeight;\n            this.brush.redraw(this.props.game.canvasData.strokes);\n        }.bind(_this), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n    }\n\n    (0, _createClass3.default)(Game, [{\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var _props = this.props,\n                game = _props.game,\n                user = _props.user,\n                currentRoom = _props.currentRoom;\n            var word = game.word,\n                countDown = game.countDown,\n                banker = game.banker,\n                players = game.players,\n                status = game.status;\n            var owner = currentRoom.owner;\n\n            var isRoomOwner = owner && user.id === owner.id;\n            var isBanker = banker && banker.id === owner.id;\n            return _react2.default.createElement(\n                'section',\n                { className: 'game-wrapper' },\n                _react2.default.createElement(\n                    'section',\n                    { className: 'game-info' },\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'tip' },\n                        { pending: '等待下个回合', going: '进行中', await: '等待房主开始游戏' }[status]\n                    ),\n                    status === 'await' ? null : [_react2.default.createElement(\n                        'div',\n                        { key: 'word', className: 'row' },\n                        _react2.default.createElement(\n                            'span',\n                            { className: 'key' },\n                            '\\u76EE\\u6807\\u8BCD\\u8BED'\n                        ),\n                        _react2.default.createElement(\n                            'span',\n                            { className: 'value key-word' },\n                            word || '?'\n                        )\n                    ), _react2.default.createElement(\n                        'div',\n                        { key: 'time', className: 'row' },\n                        _react2.default.createElement(\n                            'span',\n                            { className: 'key' },\n                            { 'pending': '下个回合', 'going': '剩余时间' }[status]\n                        ),\n                        _react2.default.createElement(\n                            'span',\n                            { className: 'value' },\n                            countDown || ''\n                        )\n                    ), _react2.default.createElement(\n                        'div',\n                        { key: 'host', className: 'row' },\n                        _react2.default.createElement(\n                            'span',\n                            { className: 'key' },\n                            '\\u5E84\\u5BB6'\n                        ),\n                        _react2.default.createElement(\n                            'span',\n                            { className: 'value' },\n                            (0, _main.getPersonName)(banker)\n                        )\n                    )],\n                    status === 'await' && isRoomOwner ? _react2.default.createElement(\n                        'div',\n                        { className: 'starter' },\n                        _react2.default.createElement(\n                            'span',\n                            { className: 'btn btn-default btn-md', onClick: _wsAction2.default.startGame },\n                            '\\u5F00\\u59CB\\u6E38\\u620F'\n                        )\n                    ) : null,\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'rank-wrapper' },\n                        _react2.default.createElement(\n                            'div',\n                            { key: '', className: 'table-row' },\n                            _react2.default.createElement(\n                                'span',\n                                { className: 'rank' },\n                                '\\u6392\\u540D'\n                            ),\n                            _react2.default.createElement(\n                                'span',\n                                { className: 'name' },\n                                '\\u73A9\\u5BB6'\n                            ),\n                            _react2.default.createElement(\n                                'span',\n                                { className: 'score' },\n                                '\\u79EF\\u5206'\n                            )\n                        ),\n                        renderRankings(players)\n                    )\n                ),\n                _react2.default.createElement(\n                    'section',\n                    { className: 'game-panel' },\n                    _react2.default.createElement('canvas', {\n                        className: 'canvas',\n                        ref: 'canvas', width: '600', height: '400',\n                        style: { cursor: status !== 'going' || !banker || banker.id !== user.id ? 'default' : 'crosshair' }\n                    }),\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'controls', ref: 'controls' },\n                        _config.strokeColors.map(function (color) {\n                            return _react2.default.createElement('div', {\n                                key: color,\n                                style: { background: color },\n                                className: 'color-brush ' + (_this2.state.color === color ? 'active' : ''),\n                                onClick: function onClick() {\n                                    _this2.syncStroke({ type: 'mode', mode: 'brush' });\n                                    _this2.syncStroke({ type: 'color', color: color });\n                                }\n                            });\n                        }),\n                        _react2.default.createElement('div', { className: 'color-brush eraser',\n                            title: '\\u64A4\\u9500',\n                            onClick: function onClick() {\n                                _this2.syncStroke({ type: 'revoke' });\n                            } })\n                    )\n                )\n            );\n        }\n    }, {\n        key: 'componentWillMount',\n        value: function componentWillMount() {\n            var _props2 = this.props,\n                setGameStatus = _props2.setGameStatus,\n                setGameCountDown = _props2.setGameCountDown,\n                setGameBanker = _props2.setGameBanker,\n                setGamePlayers = _props2.setGamePlayers,\n                setGameWord = _props2.setGameWord,\n                setCanvasData = _props2.setCanvasData;\n\n            setGameStatus('await');\n            setGameCountDown(0);\n            setGameBanker(null);\n            setGamePlayers({});\n            setGameWord('');\n            setCanvasData({ strokes: [] });\n        }\n    }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var _this3 = this;\n\n            window.addEventListener('resize', this.redrawCanvas);\n            this.brush = new _brush2.default({ canvas: this.refs.canvas });\n            this.canvasStroke$$ = _canvas.canvasStroke$.subscribe(function (stroke) {\n                return _this3.syncStroke(stroke, true);\n            });\n            this.canvasReset$$ = _canvas.canvasReset$.subscribe(function () {\n                return _this3.resetCanvas();\n            });\n            this.mouseEvent$$ = _Rx2.default.Observable.fromEvent(this.refs.canvas, 'mousedown').do(function (e) {\n                // beginPath on mousedown event\n                _this3.syncStroke({\n                    x: e.offsetX / _this3.refs.canvas.offsetWidth,\n                    y: e.offsetY / _this3.refs.canvas.offsetHeight,\n                    type: 'begin'\n                });\n            }).switchMap(function (firstE) {\n                return _Rx2.default.Observable.fromEvent(_this3.refs.canvas, 'mousemove').takeUntil(_Rx2.default.Observable.fromEvent(document.body, 'mouseup').do(function (e) {\n                    // closePath on mouseup event\n                    _this3.syncStroke({ type: 'close' });\n                }));\n            }).do(function (e) {\n                // draw mousemove event\n                _this3.syncStroke({\n                    x: e.offsetX / _this3.refs.canvas.offsetWidth,\n                    y: e.offsetY / _this3.refs.canvas.offsetHeight,\n                    type: 'move'\n                });\n            }).subscribe();\n\n            // todo: redraw after state changed\n            setTimeout(function () {\n                _this3.redrawCanvas();\n            });\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            this.mouseEvent$$.unsubscribe();\n            this.canvasReset$$.unsubscribe();\n            this.canvasStroke$$.unsubscribe();\n            window.removeEventListener('resize', this.redrawCanvas);\n        }\n    }, {\n        key: 'syncStroke',\n        value: function syncStroke(stroke, fromServer) {\n            var _props3 = this.props,\n                game = _props3.game,\n                user = _props3.user,\n                pushCanvasStroke = _props3.pushCanvasStroke;\n\n            // if game is not going or you are not the banker, stroke event would be ignored\n\n            if (!fromServer && (game.status !== 'going' || !game.banker || game.banker.id !== user.id)) return;\n            if (stroke.type === 'color') {\n                this.setState({\n                    color: stroke.color\n                });\n            } else if (stroke.type === 'mode' && stroke.mode === 'eraser') {\n                this.setState({\n                    color: '_eraser'\n                });\n            }\n\n            pushCanvasStroke(stroke);\n            this.brush.exec(stroke);\n            !fromServer && _wsAction2.default.emitCanvasStroke(stroke);\n        }\n    }, {\n        key: 'resetCanvas',\n        value: function resetCanvas() {\n            var setCanvasData = this.props.setCanvasData;\n\n            setCanvasData({\n                size: [this.refs.canvas.width, this.refs.canvas.height],\n                strokes: []\n            });\n            this.setState({\n                color: '#000'\n            });\n            this.brush.redraw();\n        }\n    }]);\n    return Game;\n}(_react.Component)) || _class);\nexports.default = Game;\n\n/***/ }),\n\n/***/ 772:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = undefined;\n\nvar _getIterator2 = __webpack_require__(256);\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _classCallCheck2 = __webpack_require__(91);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(92);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Brush = function () {\n    function Brush(_ref) {\n        var canvas = _ref.canvas,\n            _ref$lineWidth = _ref.lineWidth,\n            lineWidth = _ref$lineWidth === undefined ? 4 : _ref$lineWidth,\n            _ref$color = _ref.color,\n            color = _ref$color === undefined ? 'red' : _ref$color;\n        (0, _classCallCheck3.default)(this, Brush);\n\n        this.ctx = canvas.getContext('2d');\n        this.mode = 'brush';\n        this.ctx.strokeStyle = color;\n        this.ctx.lineWidth = lineWidth;\n        this.strokes = [];\n    }\n\n    (0, _createClass3.default)(Brush, [{\n        key: 'redraw',\n        value: function redraw(strokes) {\n            strokes = (strokes || []).slice();\n            var revokeIndex = void 0;\n            revokeLoop: while ((revokeIndex = strokes.findIndex(function (stroke) {\n                return stroke.type === 'revoke';\n            })) !== -1) {\n                var beginIndex = 0;\n                var closeIndex = revokeIndex - 1;\n                strokes.splice(revokeIndex, 1);\n                for (var i = revokeIndex - 1; i > 0; i--) {\n                    if (strokes[i].type === 'close') {\n                        closeIndex = i;\n                    } else if (strokes[i].type === 'begin') {\n                        beginIndex = i;\n                        strokes.splice(beginIndex, closeIndex - beginIndex + 1);\n                        continue revokeLoop;\n                    }\n                }\n                // strokes.splice(beginIndex, endIndex - beginIndex + 1);\n            }\n            console.log(strokes, 111);\n\n            this.strokes = strokes;\n            var _ctx$canvas = this.ctx.canvas,\n                width = _ctx$canvas.width,\n                height = _ctx$canvas.height;\n\n            this.ctx.clearRect(0, 0, width, height);\n            this.ctx.strokeStyle = '#000';\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = (0, _getIterator3.default)(strokes), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var stroke = _step.value;\n\n                    this.draw(stroke);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n    }, {\n        key: 'exec',\n        value: function exec(stroke) {\n            this.strokes.push(stroke);\n            if (stroke.type === 'revoke') {\n                this.redraw(this.strokes);\n            } else {\n                this.draw(stroke);\n            }\n        }\n    }, {\n        key: 'draw',\n        value: function draw(stroke) {\n            var ctx = this.ctx;\n            var _ctx$canvas2 = ctx.canvas,\n                width = _ctx$canvas2.width,\n                height = _ctx$canvas2.height;\n\n            var x = stroke.x * width;\n            var y = stroke.y * height;\n            switch (stroke.type) {\n                case 'mode':\n                    this.mode = stroke.mode;\n                    break;\n                case 'color':\n                    this.ctx.strokeStyle = stroke.color;\n                    break;\n                case 'begin':\n                    ctx.beginPath();\n                    ctx.moveTo(x, y);\n                    ctx.stroke();\n                    break;\n                case 'move':\n                    {\n                        switch (this.mode) {\n                            case 'brush':\n                                ctx.lineTo(x, y);\n                                ctx.stroke();\n                                break;\n                            case 'eraser':\n                                ctx.clearRect(x - ctx.lineWidth * 10, y - ctx.lineWidth * 10, ctx.lineWidth * 20, ctx.lineWidth * 20);\n                                break;\n                        }\n                    }\n                    break;\n                case 'close':\n                    ctx.closePath();\n                    break;\n\n            }\n        }\n    }]);\n    return Brush;\n}();\n\nexports.default = Brush;\n;\n\n/***/ }),\n\n/***/ 773:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction fillZero(num) {\n    num = +num;\n    return num <= 9 ? '0' + num : '' + num;\n}\n\nvar getFormatTime = exports.getFormatTime = function getFormatTime(date, mode) {\n    if (!date) return '';\n    date = new Date(date);\n    var _ref = [date.getFullYear(), fillZero(date.getMonth() + 1), fillZero(date.getDate())],\n        Y = _ref[0],\n        M = _ref[1],\n        D = _ref[2];\n    var _ref2 = [fillZero(date.getHours()), fillZero(date.getMinutes()), fillZero(date.getSeconds())],\n        h = _ref2[0],\n        m = _ref2[1],\n        s = _ref2[2];\n\n    if (mode === 'HMS') {\n        return h + ':' + m + ':' + s;\n    } else if (mode === 'YMD') {\n        return Y + '-' + M + '-' + D;\n    }\n    return Y + '-' + M + '-' + D + ' ' + h + ':' + m + ':' + s;\n};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// chunk.0.060fcd85f45cedf27bb2.js","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport * as roomActions from 'actions/room';\r\nimport Game from './Game';\r\nimport Header from 'containers/Header';\r\nimport wsAction from 'utils/wsAction';\r\nimport { getFormatTime } from 'utils/formatter';\r\nimport { getPersonName } from 'utils/main';\r\nimport { message$ } from 'flow/message';\r\n\r\nconst renderMessageList = (messageList) => {\r\n    return (\r\n        <div>\r\n            {\r\n                messageList.map(message => {\r\n                    switch (message.type) {\r\n                        case 'enter':\r\n                        case 'leave':\r\n                            return (\r\n                                <div className=\"message\" key={message.timestamp + message.type}>\r\n                                    <div className=\"info system\">\r\n                                        <span className=\"by\">{ getPersonName(message.by) } { {'enter': '进入房间', 'leave': '离开房间'}[message.type] }</span>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        case 'info-change':\r\n                            return (\r\n                                <div className=\"message\" key={message.timestamp}>\r\n                                    <div className=\"info system\">\r\n                                        <span className=\"by\">{ message.content.old.name } 改名为 { message.content.info.name }</span>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        case 'message':\r\n                            return (\r\n                                <div className=\"message\" key={message.timestamp}>\r\n                                    <div className=\"info\">\r\n                                        <span className=\"by\">{ getPersonName(message.by) }</span>\r\n                                        <span className=\"time\">{ getFormatTime(message.timestamp, 'HMS') }</span>\r\n                                    </div>\r\n                                    <div className=\"content\">{ message.content }</div>\r\n                                </div>\r\n                            );\r\n                        default:\r\n                            return null;\r\n                    }\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\n@connect(\r\n    state => ({\r\n        currentRoom: state.room.currentRoom,\r\n        user: state.user,\r\n    }),\r\n    dispatch => bindActionCreators({...roomActions}, dispatch)\r\n)\r\nexport default class Room extends Component {\r\n    static propTypes = {\r\n        roomName: PropTypes.string.isRequired\r\n    };\r\n    state = {\r\n        messageInputValue: ''\r\n    };\r\n    render () {\r\n        let { currentRoom } = this.props;\r\n        let { owner, people, name } = currentRoom;\r\n        return (\r\n            <section>\r\n                <Header key=\"header\" title={ name } type={'room'} />\r\n                <section className=\"room-container\">\r\n                    <section className=\"game-block\">\r\n                        <Game key=\"game\" />\r\n                    </section>\r\n                    <section className=\"people-block\">\r\n                        <div title=\"房主\">\r\n                            <span>{ getPersonName(owner) }<span className=\"host-marker\">(房主)</span></span>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                people.filter(person => owner && person.id !== owner.id).map((person, index) => {\r\n                                    let personName = getPersonName(person);\r\n                                    return (\r\n                                        <div key={person.id}>\r\n                                            {/*<span style={{visibility: index === 0 ? 'visible' : 'hidden'}}></span>*/}\r\n                                            <span title={personName}>\r\n                                                { personName }\r\n                                            </span>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"chat-block\">\r\n                        <section className=\"message-wrapper\"  ref=\"message-wrapper\">\r\n                            { renderMessageList(currentRoom.messageList) }\r\n                        </section>\r\n                        <section className=\"input-wrapper input-group input-btn\">\r\n                            <input\r\n                                className=\"input input-default input-md\"\r\n                                placeholder=\"请输入内容\"\r\n                                value={this.state.messageInputValue}\r\n                                onChange={\r\n                                    e => {\r\n                                        let messageInputValue = e.target.value;\r\n                                        this.setState({\r\n                                            messageInputValue\r\n                                        });\r\n                                    }\r\n                                }\r\n                                onKeyDown={e => e.keyCode === 13 && this.sendMessage()}\r\n                            />\r\n                            <span className={\"btn btn-default btn-md\" + (this.state.messageInputValue ? '' : ' disabled')} onClick={::this.sendMessage}>发送</span>\r\n                        </section>\r\n                    </section>\r\n                </section>\r\n            </section>\r\n        )\r\n    }\r\n    sendMessage () {\r\n        if (this.state.messageInputValue) {\r\n            wsAction.sendRoomMessage(this.state.messageInputValue);\r\n            this.setState({\r\n                messageInputValue: ''\r\n            });\r\n        }\r\n    }\r\n    componentDidMount () {\r\n        let { roomName, currentRoom } = this.props;\r\n        this.message$$ = message$.subscribe(message => {\r\n            this.refs['message-wrapper'].scrollTop = this.refs['message-wrapper'].scrollHeight;\r\n        });\r\n        if (currentRoom && currentRoom.name === roomName) return;\r\n        // todo 处理此时socket还未连接上的情况\r\n        document.title = `你画我猜online - ${roomName}`;\r\n        wsAction.enterRoom(roomName);\r\n    }\r\n    componentWillUnmount () {\r\n        this.message$$.unsubscribe();\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/Room.js","import socket from 'api/socketIo';\r\nimport ls from 'api/localStorage';\r\nimport store from '../reducers';\r\nimport * as roomActions from 'actions/room';\r\nimport * as networkActions from 'actions/network';\r\nimport * as userActions from 'actions/user';\r\nimport * as gameActions from 'actions/game';\r\nimport { message$ } from 'flow/message';\r\n\r\nexport default {\r\n    enterRoom (roomName) {\r\n        socket.emit('enterRoom', roomName, () => {\r\n            store.dispatch(roomActions.setRoomInfo({ roomName }));\r\n        });\r\n    },\r\n    leaveRoom () {\r\n        socket.emit('leaveRoom');\r\n        store.dispatch(roomActions.setRoomInfo({ roomName: '' }));\r\n    },\r\n    sendRoomMessage (content) {\r\n        let userInfo = store.getState().user;\r\n        socket.emit('sendRoomMessage', content, (res) => {\r\n            if (!res.ok) return;\r\n            message$.next({\r\n                content,\r\n                by: userInfo,\r\n                timestamp: res.timestamp,\r\n                type: 'message'\r\n            });\r\n        });\r\n\r\n    },\r\n    startGame () {\r\n        socket.emit('startGame');\r\n    },\r\n    emitCanvasStroke (stroke) {\r\n        socket.emit('canvasStroke', stroke);\r\n    },\r\n    setUserInfo (info) {\r\n        socket.emit('setClientInfo', info, (e) => {\r\n            ls.set('clientInfo', info, 7 * 24 * 60 * 60 * 1000);\r\n            store.dispatch(userActions.setUserData({\r\n                info\r\n            }));\r\n        });\r\n    },\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/wsAction.js","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport * as networkActions from 'actions/network';\r\nimport wsAction from \"../utils/wsAction\";\r\n\r\n@connect(\r\n    state => ({\r\n        loadingStatus: state.network.loadingStatus,\r\n        webSocketStatus: state.network.webSocketStatus,\r\n        user: state.user\r\n    }),\r\n    dispatch => bindActionCreators({...networkActions}, dispatch)\r\n)\r\nexport default class Header extends Component {\r\n    static defaultProps = {\r\n        type: '',\r\n    };\r\n    state = {\r\n        nameEditable: false,\r\n        nameValue: '',\r\n    };\r\n    render () {\r\n        const { loadingStatus, webSocketStatus, loading, loaded, wsConnect, wsDisconnect, user, title, type } = this.props;\r\n\r\n        let typeNode = (type) => {\r\n            switch (type) {\r\n                case 'home':\r\n                    return null;\r\n                case 'room':\r\n                    return (\r\n                        <Link to={'/'}>\r\n                            <span className=\"icon-wrapper\">\r\n                                <svg className=\"icon clickable\" aria-hidden=\"true\">\r\n                                    <use xlinkHref=\"#icon-back\"></use>\r\n                                </svg>\r\n                            </span>\r\n\r\n                        </Link>\r\n                    );\r\n                default:\r\n                    return null;\r\n            }\r\n        };\r\n        return (\r\n            <section className=\"fixed-header\">\r\n                <div className=\"item left\">\r\n                    {\r\n                        webSocketStatus\r\n                            ? null\r\n                            : (\r\n                                <span\r\n                                    className={ `item wifi ${'alert-color'}` }\r\n                                    title={'网络出错'}\r\n                                >\r\n                                    <svg className=\"icon\" aria-hidden=\"true\">\r\n                                        <use xlinkHref=\"#icon-wifi\"></use>\r\n                                    </svg>\r\n                                </span>\r\n                            )\r\n                    }\r\n                    <span>\r\n                        { typeNode(type) }\r\n                    </span>\r\n                    <span>\r\n                        { type === 'room'\r\n                            ? <span>房间：<span className=\"room-name\">{ title }</span></span>\r\n                            : <span>{ title }</span> }\r\n                    </span>\r\n                </div>\r\n\r\n\r\n                <div className=\"item right\" onClick={::this.switchInfoEditable}>\r\n\r\n                    {\r\n                        this.state.nameEditable\r\n                            ? (\r\n                                [\r\n                                    <span key=\"icon\" className=\"icon-wrapper\">\r\n                                        <svg className=\"icon\" aria-hidden=\"true\">\r\n                                            <use xlinkHref=\"#icon-people\"></use>\r\n                                        </svg>\r\n                                    </span>,\r\n                                    <input\r\n                                        key=\"input\"\r\n                                        className=\"input input-white input-md\"\r\n                                        value={this.state.nameValue}\r\n                                        onChange={\r\n                                            (e) => {\r\n                                                this.setState({\r\n                                                    nameValue: e.target.value\r\n                                                })\r\n                                            }\r\n                                        }\r\n                                        onKeyDown={\r\n                                            (e) => {\r\n                                                if (e.keyCode === 13) {\r\n                                                    this.setName();\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    />,\r\n                                    <span key=\"confirm\" className=\"icon-wrapper\" onClick={::this.setName}>\r\n                                        <svg className=\"icon clickable\" aria-hidden=\"true\">\r\n                                            <use xlinkHref=\"#icon-roundcheck\"></use>\r\n                                        </svg>\r\n                                    </span>,\r\n                                    <span key=\"cancel\" className=\"icon-wrapper\" onClick={\r\n                                        () => {\r\n                                            this.setState({\r\n                                                nameEditable: false,\r\n                                            });\r\n                                        }\r\n                                    }>\r\n                                        <svg className=\"icon clickable\" aria-hidden=\"true\">\r\n                                            <use xlinkHref=\"#icon-roundclose\"></use>\r\n                                        </svg>\r\n                                    </span>\r\n                                ]\r\n                            )\r\n                            : (\r\n                                <div title=\"点击修改昵称\" className=\"clickable\">\r\n                                    <span className=\"icon-wrapper\">\r\n                                        <svg style={{stroke: \"#fff\", fill: \"#fff\"}} className=\"icon\" aria-hidden=\"true\">\r\n                                            <use xlinkHref=\"#icon-people\"></use>\r\n                                        </svg>\r\n                                    </span>\r\n                                    <span>{ user.info.name || user.id }</span>\r\n                                </div>\r\n                            )\r\n\r\n                    }\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n    componentWillMount () {\r\n\r\n    }\r\n    switchInfoEditable () {\r\n        if (!this.state.nameEditable) {\r\n            this.setState({\r\n                nameEditable: true,\r\n                nameValue: this.props.user.info.name || this.props.user.id,\r\n            });\r\n        }\r\n    }\r\n    setName () {\r\n        if (this.props.user.info.name !== this.state.nameValue) {\r\n            wsAction.setUserInfo({\r\n                name: this.state.nameValue,\r\n            });\r\n        }\r\n        this.setState({\r\n            nameEditable: false,\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/containers/Header.js","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport Brush from 'utils/brush';\r\nimport Rx from 'rxjs/Rx';\r\nimport wsAction from 'utils/wsAction';\r\nimport { canvasStroke$, canvasReset$ } from 'flow/canvas';\r\nimport * as gameActions from 'actions/game';\r\nimport { getPersonName } from 'utils/main';\r\nimport { strokeColors } from 'config';\r\n\r\nconst renderRankings = (players) => {\r\n    let list = [];\r\n    for (let playerId in players) {\r\n        let player = players[playerId];\r\n        list.push(player);\r\n    }\r\n    list.sort((a, b) => a.score > b.score ? -1 : 1);\r\n    list = list.map((player, index) => (\r\n        <div key={player.id} className=\"table-row\">\r\n            <span className=\"rank\">\r\n                { index + 1 }\r\n            </span>\r\n            <span title={getPersonName(player)} className={\"name\" + (player.online ? ' on' : ' off')}>\r\n                { getPersonName(player) }\r\n            </span>\r\n            <span className=\"score\">\r\n                { player.score }\r\n            </span>\r\n        </div>\r\n    ));\r\n    return list;\r\n};\r\n\r\n@connect(\r\n    state => ({\r\n        game: state.game,\r\n        user: state.user,\r\n        currentRoom: state.room.currentRoom,\r\n    }),\r\n    dispatch => bindActionCreators({...gameActions}, dispatch)\r\n)\r\nexport default class Game extends Component {\r\n    state = {\r\n        color: '#000',\r\n    };\r\n    render () {\r\n        let { game, user, currentRoom } = this.props;\r\n        let { word, countDown, banker, players, status } = game;\r\n        let { owner } = currentRoom;\r\n        let isRoomOwner = owner && user.id === owner.id;\r\n        let isBanker = banker && banker.id === owner.id;\r\n        return (\r\n            <section className=\"game-wrapper\">\r\n                <section className=\"game-info\">\r\n                    <div className=\"tip\">{ {pending: '等待下个回合', going: '进行中', await: '等待房主开始游戏'}[status] }</div>\r\n\r\n\r\n                    {\r\n                        status === 'await'\r\n                        ? null\r\n                        : [\r\n                            <div key='word' className=\"row\">\r\n                                <span className=\"key\">目标词语</span>\r\n                                <span className=\"value key-word\">{ word || '?' }</span>\r\n                            </div>,\r\n                            <div key=\"time\" className=\"row\">\r\n                                <span className=\"key\">{{'pending': '下个回合', 'going': '剩余时间'}[status]}</span>\r\n\r\n                                <span className=\"value\">{ countDown || '' }</span>\r\n                            </div>,\r\n                            <div key=\"host\" className=\"row\">\r\n                                <span className=\"key\">庄家</span>\r\n                                <span className=\"value\">{ getPersonName(banker) }</span>\r\n                            </div>\r\n                          ]\r\n                    }\r\n\r\n                    {\r\n                        status === 'await' && isRoomOwner ?\r\n                            <div className=\"starter\">\r\n                                <span className=\"btn btn-default btn-md\" onClick={ wsAction.startGame }>开始游戏</span>\r\n                            </div>\r\n                            : null\r\n                    }\r\n                    <div className=\"rank-wrapper\">\r\n                        <div key={''} className=\"table-row\">\r\n                            <span className=\"rank\">\r\n                                排名\r\n                            </span>\r\n                            <span className=\"name\">\r\n                                玩家\r\n                            </span>\r\n                            <span className=\"score\">\r\n                                积分\r\n                            </span>\r\n                        </div>\r\n                        { renderRankings(players) }\r\n                    </div>\r\n                </section>\r\n                <section className=\"game-panel\">\r\n                    <canvas\r\n                        className=\"canvas\"\r\n                        ref=\"canvas\" width=\"600\" height=\"400\"\r\n                        style={{cursor: (status !== 'going' || !banker || banker.id !== user.id) ? 'default' : 'crosshair'}}\r\n                    ></canvas>\r\n                    <div className=\"controls\" ref=\"controls\">\r\n                        {\r\n                            strokeColors.map(color => {\r\n                                return (\r\n                                    <div\r\n                                        key={color}\r\n                                        style={{background: color}}\r\n                                        className={`color-brush ${this.state.color === color ? 'active' : ''}`}\r\n                                        onClick={() => {\r\n                                            this.syncStroke({ type: 'mode', mode: 'brush' });\r\n                                            this.syncStroke({ type: 'color', color });\r\n                                        }}\r\n                                    >\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        {/*<div className={`color-brush eraser ${this.state.color === '_eraser' ? 'active' : ''}`}*/}\r\n                             {/*title=\"橡皮\"*/}\r\n                             {/*onClick={() => {this.syncStroke({ type: 'mode', mode: 'eraser' });}}>*/}\r\n                        {/*</div>*/}\r\n                        <div className={`color-brush eraser`}\r\n                             title=\"撤销\"\r\n                             onClick={() => {this.syncStroke({ type: 'revoke' });}}>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </section>\r\n        );\r\n    }\r\n    redrawCanvas = function () {\r\n        const canvas = this.refs.canvas;\r\n        canvas.width = canvas.offsetWidth;\r\n        canvas.height = canvas.offsetHeight;\r\n        this.brush.redraw(this.props.game.canvasData.strokes);\r\n    }.bind(this);\r\n    componentWillMount () {\r\n        let { setGameStatus, setGameCountDown, setGameBanker, setGamePlayers, setGameWord, setCanvasData } = this.props;\r\n        setGameStatus('await');\r\n        setGameCountDown(0);\r\n        setGameBanker(null);\r\n        setGamePlayers({});\r\n        setGameWord('');\r\n        setCanvasData({ strokes: [] });\r\n    }\r\n    componentDidMount () {\r\n        window.addEventListener('resize', this.redrawCanvas);\r\n        this.brush = new Brush({ canvas: this.refs.canvas });\r\n        this.canvasStroke$$ = canvasStroke$.subscribe(stroke => this.syncStroke(stroke, true));\r\n        this.canvasReset$$ = canvasReset$.subscribe(() => this.resetCanvas());\r\n        this.mouseEvent$$ = Rx.Observable\r\n            .fromEvent(this.refs.canvas, 'mousedown')\r\n            .do(e => { // beginPath on mousedown event\r\n                this.syncStroke({\r\n                    x: e.offsetX / this.refs.canvas.offsetWidth,\r\n                    y: e.offsetY / this.refs.canvas.offsetHeight,\r\n                    type: 'begin',\r\n                });\r\n            })\r\n            .switchMap(firstE => Rx.Observable\r\n                .fromEvent(this.refs.canvas, 'mousemove')\r\n                .takeUntil(Rx.Observable\r\n                    .fromEvent(document.body, 'mouseup')\r\n                    .do(e => { // closePath on mouseup event\r\n                        this.syncStroke({ type: 'close' });\r\n                    })))\r\n            .do(e => { // draw mousemove event\r\n                this.syncStroke({\r\n                    x: e.offsetX / this.refs.canvas.offsetWidth,\r\n                    y: e.offsetY / this.refs.canvas.offsetHeight,\r\n                    type: 'move',\r\n                });\r\n            })\r\n            .subscribe();\r\n\r\n        // todo: redraw after state changed\r\n        setTimeout(() => {\r\n            this.redrawCanvas();\r\n        });\r\n    }\r\n    componentWillUnmount () {\r\n        this.mouseEvent$$.unsubscribe();\r\n        this.canvasReset$$.unsubscribe();\r\n        this.canvasStroke$$.unsubscribe();\r\n        window.removeEventListener('resize', this.redrawCanvas);\r\n    }\r\n    syncStroke (stroke, fromServer) {\r\n        let { game, user, pushCanvasStroke } = this.props;\r\n\r\n        // if game is not going or you are not the banker, stroke event would be ignored\r\n        if (!fromServer && (game.status !== 'going' || !game.banker || game.banker.id !== user.id)) return;\r\n        if (stroke.type === 'color') {\r\n            this.setState({\r\n                color: stroke.color,\r\n            });\r\n        } else if (stroke.type === 'mode' && stroke.mode === 'eraser') {\r\n            this.setState({\r\n                color: '_eraser',\r\n            });\r\n        }\r\n\r\n        pushCanvasStroke(stroke);\r\n        this.brush.exec(stroke);\r\n        !fromServer && wsAction.emitCanvasStroke(stroke);\r\n    }\r\n    resetCanvas () {\r\n        let { setCanvasData } = this.props;\r\n        setCanvasData({\r\n            size: [this.refs.canvas.width, this.refs.canvas.height],\r\n            strokes: []\r\n        });\r\n        this.setState({\r\n            color: '#000'\r\n        });\r\n        this.brush.redraw();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/containers/Game.js","export default class Brush {\r\n    constructor ({\r\n        canvas,\r\n        lineWidth = 4,\r\n        color = 'red'\r\n    }) {\r\n        this.ctx = canvas.getContext('2d');\r\n        this.mode = 'brush';\r\n        this.ctx.strokeStyle = color;\r\n        this.ctx.lineWidth = lineWidth;\r\n        this.strokes = [];\r\n    }\r\n    redraw (strokes) {\r\n        strokes = (strokes || []).slice();\r\n        let revokeIndex;\r\n        revokeLoop: while ((revokeIndex = strokes.findIndex(stroke => stroke.type === 'revoke')) !== -1) {\r\n            let beginIndex = 0;\r\n            let closeIndex = revokeIndex - 1;\r\n            strokes.splice(revokeIndex, 1);\r\n            for (let i = revokeIndex - 1; i > 0; i--) {\r\n                if (strokes[i].type === 'close') {\r\n                    closeIndex = i;\r\n                } else if (strokes[i].type === 'begin') {\r\n                    beginIndex = i;\r\n                    strokes.splice(beginIndex, closeIndex - beginIndex + 1);\r\n                    continue revokeLoop;\r\n                }\r\n            }\r\n            // strokes.splice(beginIndex, endIndex - beginIndex + 1);\r\n        }\r\n        console.log(strokes, 111)\r\n\r\n        this.strokes = strokes;\r\n        let { width, height } = this.ctx.canvas;\r\n        this.ctx.clearRect(0, 0, width, height);\r\n        this.ctx.strokeStyle = '#000';\r\n        for (let stroke of strokes) {\r\n            this.draw(stroke);\r\n        }\r\n    }\r\n    exec (stroke) {\r\n        this.strokes.push(stroke);\r\n        if (stroke.type === 'revoke') {\r\n            this.redraw(this.strokes);\r\n        } else {\r\n            this.draw(stroke);\r\n        }\r\n    }\r\n    draw (stroke) {\r\n        let ctx = this.ctx;\r\n        let { width, height } = ctx.canvas;\r\n        let x = stroke.x * width;\r\n        let y = stroke.y * height;\r\n        switch (stroke.type) {\r\n            case 'mode':\r\n                this.mode = stroke.mode;\r\n                break;\r\n            case 'color':\r\n                this.ctx.strokeStyle = stroke.color;\r\n                break;\r\n            case 'begin':\r\n                ctx.beginPath();\r\n                ctx.moveTo(x, y);\r\n                ctx.stroke();\r\n                break;\r\n            case 'move':\r\n            {\r\n                switch (this.mode) {\r\n                    case 'brush':\r\n                        ctx.lineTo(x, y);\r\n                        ctx.stroke();\r\n                        break;\r\n                    case 'eraser':\r\n                        ctx.clearRect(x - ctx.lineWidth * 10, y - ctx.lineWidth * 10, ctx.lineWidth * 20, ctx.lineWidth * 20);\r\n                        break;\r\n                }\r\n            }\r\n                break;\r\n            case 'close':\r\n                ctx.closePath();\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/utils/brush.js","function fillZero (num) {\r\n    num = +num;\r\n    return num <= 9 ? '0' + num : '' + num;\r\n}\r\n\r\nexport const getFormatTime = (date, mode) => {\r\n    if (!date) return '';\r\n    date = new Date(date);\r\n    let [Y, M ,D] = [\r\n        date.getFullYear(),\r\n        fillZero(date.getMonth() + 1),\r\n        fillZero(date.getDate())\r\n    ];\r\n    let [h, m ,s] = [\r\n        fillZero(date.getHours()),\r\n        fillZero(date.getMinutes()),\r\n        fillZero(date.getSeconds())\r\n    ];\r\n    if (mode === 'HMS') {\r\n        return `${h}:${m}:${s}`;\r\n    } else if (mode === 'YMD') {\r\n        return `${Y}-${M}-${D}`;\r\n    }\r\n    return `${Y}-${M}-${D} ${h}:${m}:${s}`;\r\n};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/formatter.js"],"sourceRoot":""}